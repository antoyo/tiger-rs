let type intConsumer = int -> answer

    function isDigit(s: string) : int =
        ord(s) >= ord("0") & ord(s) <= ord("9")

    function getInt(done: intConsumer) =
        let function nextDigit(accum: int) =
            let function eatChar(dig: string) =
                if isDigit(dig) then
                    nextDigit(accum * 10 + ord(dig) - ord("0"))
                else
                    done(accum)
            in
                getchar(function(char: string) = eatChar(char))
            end
        in
            nextDigit(0)
        end

    function putInt(i: int, c: cont) =
        if i = 0 then
            c()
        else
            let var rest := i / 10
                var dig := i - rest * 10
                function doDigit() =
                    print(chr(dig + ord("0")), c)
            in
                putInt(rest, function() = doDigit())
            end

    function factorial(i: int) : int =
        if i = 0 then
            1
        else
            i * factorial(i - 1)

    function loop(i: int) =
        if i > 12 then
            exit()
        else
            let function ask() =
                    getInt(loop)
                function next() =
                    print("\n", ask)
            in
                putInt(factorial(i), next)
            end
in
    getInt(loop)
end
