let function hello(c: cont) = print("Hello, World!\n", c)
    var num := 42
    var num: int := 42
    type myNum = int
    type myArray = array of myNum
    type myStruct = {
        myNum: int
    }
    type myString = {
        len: int
    }
    type myStruct2 = {
        myNum2: int,
        myString: myString
    }
    function myFunc(myParam: int, c: cont) = (
        print("Hello ", function() =
            printi(myParam, c)
        )
    )
    function id(myParam: int): int = myParam
    function const(param: int, other: int): int = param
    var myNull: myStruct := nil
    var myStruct := myStruct { myNum = 42 }
    var fielding := myStruct.myNum
    var myStruct2 := myStruct2 {
        myNum2 = 10,
        myString = myString {
            len = 120
        }
    }
    var fielding := myStruct2.myString.len
    type myType = {
        myString: myArray
    }
    type arrayOfStruct = array of myType
    var myArrayOfStruct := arrayOfStruct [12] of myType { myString = myArray [13] of 10 }
    var both := myArrayOfStruct[0].myString[1]
in
    hello(function() =
        myFunc(45, function() =
            printi(id(18), function() =
                printi(const(2, 4), function() =
                    printi(myStruct.myNum, function() =
                        printi(fielding, function() =
                            printi(both, exit)
                        )
                    )
                )
            )
        )
    )
end
